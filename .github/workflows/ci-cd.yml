name: StryVr CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # MARK: - Code Quality & Testing
  quality-check:
    name: Code Quality & Testing
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.2'
        
    - name: Cache Swift packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/org.swift.swiftpm
          .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Install SwiftLint
      run: |
        brew install swiftlint
        
    - name: Run SwiftLint
      run: |
        swiftlint lint --reporter github-actions-logging
        
    - name: Run SwiftFormat
      run: |
        swiftformat . --lint
        
    - name: Build project
      run: |
        xcodebuild clean build \
          -project SupportingFiles/StryVr.xcodeproj \
          -scheme StryVr \
          -destination 'platform=iOS Simulator,name=iPhone 15 Pro' \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Run unit tests
      run: |
        xcodebuild test \
          -project SupportingFiles/StryVr.xcodeproj \
          -scheme StryVr \
          -destination 'platform=iOS Simulator,name=iPhone 15 Pro' \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Run UI tests
      run: |
        xcodebuild test \
          -project SupportingFiles/StryVr.xcodeproj \
          -scheme StryVrUITests \
          -destination 'platform=iOS Simulator,name=iPhone 15 Pro' \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO

  # MARK: - Security Audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        
    - name: Run security audit
      run: |
        npm audit --audit-level=moderate
        
    - name: Run backend security audit
      run: |
        cd backend && npm audit --audit-level=moderate

  # MARK: - Performance Testing
  performance-test:
    name: Performance Testing
    runs-on: macos-latest
    needs: quality-check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.2'
        
    - name: Run performance tests
      run: |
        xcodebuild test \
          -project SupportingFiles/StryVr.xcodeproj \
          -scheme StryVrPerformanceTests \
          -destination 'platform=iOS Simulator,name=iPhone 15 Pro' \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO

  # MARK: - Build & Archive
  build-archive:
    name: Build & Archive
    runs-on: macos-latest
    needs: [quality-check, security-audit, performance-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.2'
        
    - name: Setup code signing
      uses: apple-actions/import-codesigning-certs@v1
      with:
        p12-file-base64: ${{ secrets.P12_BASE64 }}
        p12-password: ${{ secrets.P12_PASSWORD }}
        
    - name: Setup provisioning profile
      uses: apple-actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.stryvr.app'
        profile-type: 'IOS_APP_STORE'
        issuer-id: ${{ secrets.APPLE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPLE_KEY_ID }}
        api-private-key: ${{ secrets.APPLE_PRIVATE_KEY }}
        
    - name: Build and archive
      run: |
        xcodebuild archive \
          -project SupportingFiles/StryVr.xcodeproj \
          -scheme StryVr \
          -archivePath StryVr.xcarchive \
          -destination 'generic/platform=iOS' \
          CODE_SIGN_IDENTITY="iPhone Distribution" \
          PROVISIONING_PROFILE="StryVr App Store"
          
    - name: Export IPA
      run: |
        xcodebuild -exportArchive \
          -archivePath StryVr.xcarchive \
          -exportPath ./builds \
          -exportOptionsPlist exportOptions.plist
          
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: StryVr-IPA
        path: ./builds/StryVr.ipa

  # MARK: - Deploy to TestFlight
  deploy-testflight:
    name: Deploy to TestFlight
    runs-on: macos-latest
    needs: build-archive
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: StryVr-IPA
        
    - name: Deploy to TestFlight
      uses: apple-actions/upload-testflight@v1
      with:
        app-path: StryVr.ipa
        issuer-id: ${{ secrets.APPLE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPLE_KEY_ID }}
        api-private-key: ${{ secrets.APPLE_PRIVATE_KEY }}

  # MARK: - App Store Connect
  app-store-connect:
    name: App Store Connect
    runs-on: macos-latest
    needs: deploy-testflight
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Fastlane
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        
    - name: Install Fastlane
      run: |
        gem install fastlane
        
    - name: Deploy to App Store Connect
      run: |
        fastlane deliver \
          --api_key_path ${{ secrets.APPLE_PRIVATE_KEY }} \
          --api_key_id ${{ secrets.APPLE_KEY_ID }} \
          --issuer_id ${{ secrets.APPLE_ISSUER_ID }} \
          --submit_for_review \
          --automatic_release 