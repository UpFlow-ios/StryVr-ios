import SwiftUI

struct LoginView: View {
    @EnvironmentObject var authViewModel: AuthViewModel
    @State private var email: String = ""
    @State private var password: String = ""
    @State private var errorMessage: String?
    @State private var isLoading: Bool = false
    @State private var showForgotPassword = false
    @State private var showRegister = false

    var body: some View {
        ZStack {
            Color.background.ignoresSafeArea()

            VStack(spacing: Spacing.large) {
                // MARK: - Title
                Text("Login to StryVr")
                    .font(FontStyle.title)
                    .foregroundColor(.whiteText)
                    .padding(.top, Spacing.xLarge)
                    .accessibilityLabel("Login to StryVr")

                // MARK: - Email
                TextField("Email", text: $email)
                    .textContentType(.emailAddress)
                    .keyboardType(.emailAddress)
                    .padding()
                    .background(Color.card)
                    .cornerRadius(10)
                    .foregroundColor(.whiteText)
                    .autocapitalization(.none)

                // MARK: - Password
                SecureField("Password", text: $password)
                    .textContentType(.password)
                    .padding()
                    .background(Color.card)
                    .cornerRadius(10)
                    .foregroundColor(.whiteText)

                // MARK: - Error
                if let errorMessage = errorMessage {
                    Text(errorMessage)
                        .font(FontStyle.caption)
                        .foregroundColor(.red)
                        .multilineTextAlignment(.center)
                        .padding(.horizontal, Spacing.medium)
                }

                // MARK: - Login Button
                Button(action: loginUser) {
                    if isLoading {
                        ProgressView()
                            .progressViewStyle(CircularProgressViewStyle(tint: .neonBlue))
                    } else {
                        Text("Login")
                            .font(FontStyle.body)
                            .foregroundColor(.whiteText)
                            .padding()
                            .frame(maxWidth: .infinity)
                            .background(Color.neonBlue)
                            .cornerRadius(10)
                    }
                }
                .disabled(isLoading)

                // MARK: - Links to Register / Forgot
                HStack {
                    Button("Forgot Password?") {
                        showForgotPassword.toggle()
                    }
                    .font(FontStyle.caption)
                    .foregroundColor(.neonBlue)
                    .accessibilityLabel("Forgot password")

                    Spacer()

                    Button("Sign Up") {
                        showRegister.toggle()
                    }
                    .font(FontStyle.caption)
                    .foregroundColor(.neonBlue)
                    .accessibilityLabel("Sign up")
                Spacer()
                }

            }
            .padding(.horizontal, Spacing.large)
        }
        .sheet(isPresented: $showForgotPassword) {
            ForgotPasswordView()
                .environmentObject(authViewModel)
        }
        .sheet(isPresented: $showRegister) {
            RegisterView()
                .environmentObject(authViewModel)
        }
        .onReceive(authViewModel.$errorMessage) { newErrorMessage in
            errorMessage = newErrorMessage
            isLoading = false
        }
        .onReceive(authViewModel.$userSession) { _ in
            isLoading = false
        }
    }

    // MARK: - Login Logic
    private func loginUser() {
        guard !email.isEmpty, !password.isEmpty else {
            errorMessage = "Please enter both email and password."
            return
        }

        isLoading = true
        authViewModel.signIn(email: email, password: password)
    }
}
